diff --git a/Plugins/ParFlow/IO/vtkVectorJSON.h b/Plugins/ParFlow/IO/vtkVectorJSON.h
index 8e4d23c7e4..fb7fb5ecdb 100644
--- a/Plugins/ParFlow/IO/vtkVectorJSON.h
+++ b/Plugins/ParFlow/IO/vtkVectorJSON.h
@@ -6,6 +6,8 @@
 
 #include "nlohmann/json.hpp" // for json
 
+#include <stdexcept>
+
 /// Convert a vtkVector (or any vtkTuple) into a json::array.
 template <typename T, int S>
 void to_json(nlohmann::json& j, const vtkTuple<T, S>& vec)
@@ -19,12 +21,11 @@ void from_json(const nlohmann::json& j, vtkTuple<T, S>& vec)
 {
   if (!j.is_array())
   {
-    throw nlohmann::detail::type_error::create(
-      302, "type must be array, but is " + std::string(j.type_name()));
+    throw std::invalid_argument("type must be array, but is " + std::string(j.type_name()));
   }
   if (static_cast<int>(j.size()) != vec.GetSize())
   {
-    throw nlohmann::detail::type_error::create(302, "array sizes do not match");
+    throw std::invalid_argument("array sizes do not match");
   }
   int ii = 0;
   for (auto it = j.begin(); it != j.end(); ++it, ++ii)
